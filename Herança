void main() {
  String nome = "Laranja";
  double peso = 100.2;
  String cor = "Verde e Amarela";
  String sabor = "Doce e cítrica";
  int diasDesdeColheita = 40;
  bool? isMadura;
  
  
Legumes mandioca1 = Legumes('Macaxeira', 1200, 'Marrom', true);
Fruta banana1 = Fruta('Banana', 75, 'Amarela', 'Doce', 12);
Nozes macadamia1 = Nozes('Macadâmia', 2, 'Branco Amarelado', 'Doce', 20, 35);
Citricas limao1 = Citricas('Limão', 100, 'Verde', 'Azedo', 5, 9);
  
  macadamia1.printAlimento();
  banana1.printAlimento();
  mandioca1.printAlimento();
  limao1.printAlimento();
  
      mandioca1.Cozinhar();
    //limao1.cozinhar(); // não funciona
    //mandioca1.fazerSuco(); // não funciona
    limao1.FazerSuco();
    

  bool funcEstaMadura(int dias) {
    if (dias >= 30) {
      return true;
    } else {
      return false;
    }
  }

  mostrarMadura(String nome, int dias, {required String cor}) {
    if (dias >= 30) {
      print("A $nome está madura.");
    } else {
      print("A $nome não está madura.");
    }

    print("A $nome é $cor.");
  }

  int funcQuantosDiasMadura(int dias) {
    int diasParaMadura = 30;
    int quantosDiasFaltam = diasParaMadura - dias;
    return quantosDiasFaltam;
  }
}

class Fruta extends Alimento {
 
  String sabor;
  int diasDesdeColheita;
  bool? isMadura;

//Construtor - parametro posicional
  //entre chave significa opcional
  Fruta(String nome, double peso, String cor, this.sabor, this.diasDesdeColheita,
      {this.isMadura}):super(nome, peso, cor);
  
  void FazerSuco(){
    print("Voce fez um ótimo de suco de $nome");
  }
  // método
  //método é criado dentro da classe e função é na classe principal
  void estaMadura(int diasParaMadura) {
    isMadura = diasDesdeColheita >= diasParaMadura;
    print('A sua $nome foi colhida a $diasDesdeColheita dias e precisa de'
        ' $diasParaMadura dias para poder comer!'
        'Ela está Madura? $isMadura');
  }
}

class Alimento {
  String nome;
  double peso;
  String cor;

  Alimento(this.nome, this.peso, this.cor);

  void printAlimento() {
    print('Este(a) $nome pesa $peso e é $cor');
  }
}

class Legumes extends Alimento {
  bool isPrecisaCozinhar;

  Legumes(String nome, double peso, String cor, this.isPrecisaCozinhar)
      : super(nome, peso, cor);
  //chamando a classe a qual está extendida- Alimento (pai ou mae)
  
  void Cozinhar(){
    if(isPrecisaCozinhar){
      print('Pronto, o $nome está cozinhando!');
    }else{
      print('Nem precisa cozinhar!');
    }
  
}
}

class Citricas extends Fruta{
  
  bool? isMadura;
  double nivelDeAzedo;

  Citricas(String nome, double peso, String cor,String sabor,  int diasDesdeColheita,
      this.nivelDeAzedo): super(nome, peso, cor,sabor, diasDesdeColheita);
  
  void existeRefri(bool existe){
    if(existe){
      print('Existe refrigerante de $nome');
    }else{
      print('Não existe refri de $nome');
    }
  }
}

class Nozes extends Fruta{
  double porcentagemOleoNatural;

  Nozes(String nome, double peso, String cor, String sabor, int diasDesdeColheita,
      this.porcentagemOleoNatural): super(nome, peso, cor, sabor, diasDesdeColheita);

}
